name: After Deploy Test Every 15 Minute

on:
  schedule:
    - cron:  '*/15 * * * *'      
  workflow_dispatch: 

  workflow_run:
    workflows: ["Deploys"]
    types:
      - completed  

jobs:
  pypi:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    env:
      OS: ${{ matrix.os }}
      PYTHON: '3.8'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-tags: true
      - name: Getting Tag
        id: tag_extractor
        run: echo "latest_tag=$(git describe --tags --abbrev=0)" >> "$GITHUB_OUTPUT"

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8


      - name: Install pytest
        run: |
          python -m pip install --upgrade pip
          pip install pytest

      - name: Install dependencies
        run: |
          TAG=${{ steps.tag_extractor.outputs.latest_tag }}       
          pip install kot==${TAG:1} kot_api==${TAG:1} kot_gui==${TAG:1} kot_web==${TAG:1} --no-cache --upgrade


      - name: Test with pytest
        run: |
          cd ..
          pytest KOT/tests/test_kot.py -v
          pytest KOT/tests/test_remote.py -v


  pypi_docker:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    env:
      OS: ${{ matrix.os }}
      PYTHON: '3.8'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-tags: true
      - name: Getting Tag
        id: tag_extractor
        run: echo "latest_tag=$(git describe --tags --abbrev=0)" >> "$GITHUB_OUTPUT"

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8


      - name: Install pytest
        run: |
          python -m pip install --upgrade pip
          pip install pytest

      - name: Install dependencies
        run: |
          TAG=${{ steps.tag_extractor.outputs.latest_tag }}        
          pip install kot==${TAG:1} kot_api==${TAG:1} kot_gui==${TAG:1} kot_web==${TAG:1} --no-cache --upgrade


      - name: Test with pytest
        run: |
          cd ..
          pytest KOT/tests/test_docker.py -v


  docker:
    runs-on: ${{ matrix.os }}
    environment: UNIT Tests  
    strategy:
      matrix:
        os: [ubuntu-latest]
    env:
      OS: ${{ matrix.os }}
      PYTHON: '3.8'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-tags: true
      - name: Getting Tag
        id: tag_extractor
        run: echo "latest_tag=$(git describe --tags --abbrev=0)" >> "$GITHUB_OUTPUT"
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install pytest
        run: |
          python -m pip install --upgrade pip
          pip install pytest
      - name: Install dependencies
        run: |
          TAG=${{ steps.tag_extractor.outputs.latest_tag }}         
          pip install kot==${TAG:1} kot_api==${TAG:1} kot_gui==${TAG:1} kot_web==${TAG:1} --no-cache --upgrade

      - name: Install docker
        run: |
          docker pull ghcr.io/kot-database/api:${{ steps.tag_extractor.outputs.latest_tag }}
      - name: Test with pytest
        run: |
          pytest tests/published_docker.py -v          